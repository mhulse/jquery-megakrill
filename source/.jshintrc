{
	"asi"           : false,    // If automatic semicolon insertion should be tolerated.
	"bitwise"       : true,     // If bitwise operators should not be allowed.
	"boss"          : false,    // If advanced usage of assignments should be allowed.
	"browser"       : true,     // If the standard browser globals should be predefined.
	"camelcase"     : false,    // If identifiers should be required in camel case.
	"couch"         : false,    // If CouchDB globals should be predefined.
	"curly"         : true,     // If curly braces around all blocks should be required.
	"debug"         : false,    // If debugger statements should be allowed.
	"devel"         : true,     // If logging globals should be predefined (console, alert, etc.).
	"dojo"          : false,    // If Dojo Toolkit globals should be predefined.
	"eqeqeq"        : false,    // If === should be required.
	"eqnull"        : false,    // If == null comparisons should be tolerated.
	"es3"           : true,     // If ES3 syntax should be allowed.
	// https://github.com/jshint/jshint/issues/1137
	//"es5"           : true,     // If ES5 syntax should be allowed (is now set per default).
	"esnext"        : false,    // If es.next specific syntax should be allowed.
	"evil"          : false,    // If eval should be allowed.
	"expr"          : false,    // If ExpressionStatement should be allowed as Programs.
	"forin"         : true,     // If for in statements must filter.
	"funcscope"     : false,    // If only function scope should be used for scope tests.
	"gcl"           : false,    // If JSHint should be compatible with Google Closure Linter.
	"globalstrict"  : false,    // If global "use strict"; should be allowed (also enables 'strict').
	"immed"         : true,     // If immediate invocations must be wrapped in parens.
	"indent"        : 4,        // Tab width for your code.
	"iterator"      : false,    // If the `__iterator__` property should be allowed.
	"jquery"        : true,     // If jQuery globals should be predefined.
	"lastsemic"     : false,    // If semicolons may be ommitted for the trailing statements inside of a one-line blocks.
	"latedef"       : true,     // Warn if the variable is used before its definition.
	"laxbreak"      : false,    // If line breaks should not be checked.
	"laxcomma"      : false,    // If line breaks should not be checked around commas.
	"loopfunc"      : false,    // If functions should be allowed to be defined within loops.
	"maxcomplexity" : 10,       // {int} Maximum cyclomatic complexity per function.
	"maxdepth"      : 5,        // {int} Maximum nested block depth per function.
	"maxerr"        : false,    // {int} Maximum number of errors.
	"maxlen"        : 1000,     // {int} maximum length of a line.
	"maxparams"     : 5,        // {int} Maximum params per function.
	"maxstatements" : 25,       // {int} Maximum statements per function.
	"mootools"      : false,    // If MooTools globals should be predefined.
	"moz"           : false,    // If mozilla specific syntax should be allowed.
	"multistr"      : false,    // Allow multiline strings.
	"newcap"        : true,     // If constructor names must be capitalized.
	"noarg"         : true,     // If arguments.caller and arguments.callee should be disallowed.
	"node"          : false,    // If the Node.js environment globals should be predefined.
	"noempty"       : true,     // If empty blocks should be disallowed.
	"nomen"         : false,    // If names should be checked.
	"nonew"         : true,     // If using `new` for side-effects should be disallowed.
	"nonstandard"   : false,    // If non-standard (but widely adopted) globals should be predefined.
	"onecase"       : false,    // If one case switch statements should be allowed.
	"onevar"        : true,     // One var statement per function.
	"passfail"      : false,    // If the scan should stop on first error.
	"phantom"       : false,    // If PhantomJS symbols should be allowed.
	"plusplus"      : false,    // If increment/decrement should not be allowed.
	"predef"        : false,    // An array of strings, the names of predefined global variables, or an object whose keys are global variable names, and whose values are booleans that determine if each variable is assignable.
	"proto"         : false,    // If the `__proto__` property should be allowed.
	"prototypejs"   : false,    // If Prototype and Scriptaculous globals should be predefined.
	"quotmark"      : true,     // Enforce the consistency of quotation marks: 'single'|'double'|true.
	"regexdash"     : false,    // If unescaped first/last dash (-) inside brackets should be tolerated.
	"regexp"        : true,     // If the . should not be allowed in regexp literals.
	"rhino"         : false,    // If the Rhino environment globals should be predefined.
	"scripturl"     : false,    // If script-targeted URLs should be tolerated.
	"shadow"        : false,    // If variable shadowing should be tolerated.
	"shelljs"       : false,    // If ShellJS globals should be predefined.
	"smarttabs"     : true,     // If smarttabs should be tolerated (http://www.emacswiki.org/emacs/SmartTabs).
	"strict"        : true,     // Require the "use strict"; pragma.
	"sub"           : false,    // If all forms of subscript notation are tolerated.
	"supernew"      : false,    // If `new function () { ... };` and `new Object;` should be tolerated.
	"trailing"      : true,     // If trailing whitespace rules apply.
	"typed"         : true,     // If typed array globals should be predefined.
	"undef"         : true,     // If variables should be declared before used.
	"unused"        : "strict", // Warn if variables are unused..
	"validthis"     : false,    // If 'this' inside a non-constructor function is valid. This is a function scoped option only..
	"white"         : false,    // If strict whitespace rules apply.
	"withstmt"      : false,    // If with statements should be allowed.
	"worker"        : false,    // If Web Worker script symbols should be allowed.
	"wsh"           : false,    // If the Windows Scripting Host environment globals should be predefined.
	"yui"           : false,    // YUI variables should be predefined.
	"globals"       : {         // A map of global variables, with keys as names and a boolean value to determine if they are assignable.
		"jQuery": true
	}
}
