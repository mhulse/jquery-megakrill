/* https://github.com/registerguard/jquery-megakrill */;(function($){var constants={C:((typeof console!=="undefined")?true:false),NS:"megakrill",PREFIX:"mk"},methods={init:function(opts){return this.each(function(){var $this=$(this),data=$this.data(constants.NS),options=$.extend({},settings.external,$.fn[constants.NS].defaults,opts);if(!data){var $wrap=$("<div />",{"class":constants.NS}),$toggle=$("<div />",{"class":settings.internal.toggleClass}),$a=$("<a />",{"class":settings.internal.closedClass,"href":"#"});$this.data(constants.NS,{a:$a,init:false,options:options,target:$this,toggle:$toggle,toggled:false,wrap:$wrap});data=$this.data(constants.NS);}if(!data.init){data.init=true;options.onInit.call($this);if($this.length){var $menu=(options.clone)?getClone.call($this):$this;$a.appendTo($toggle);makeToggle.call($this,$a,$menu);$wrap.append($toggle);if(options.clone){$wrap.append($menu);}$wrap.insertBefore($this);options.onAfterInit.call($this);}else{if(constants.C){console.warn("there was a problem with your markup");}return this;}}else{if(constants.C){console.warn(constants.NS,"already initialized on",this);}return this;}});},destroy:function(){return this.each(function(){var $$=$(this),data=$$.data(constants.NS);if(data){var options=data.options;if(!options.clone){data.target.removeAttr("style");}data.wrap.remove();$(this).removeData(constants.NS);}else{if(constants.C){console.warn(constants.NS,"already initialized on",this);}}});}},getClone=function(){var options=this.data(constants.NS).options,$clone=this.clone();if(typeof options.cloneId==="string"){$clone.attr("id",options.cloneId);}else{if(options.cloneId){var id=$clone.attr("id");if(id){$clone.attr("id",constants.PREFIX+"-"+id);}}else{$clone.removeAttr("id");}}if(options.cloneRemove){$clone.find(options.cloneRemove).remove();}$clone.addClass(settings.internal.cloneClass).hide();return $clone;},makeToggle=function($a,$menu){var data=this.data(constants.NS),options=data.options;$a.on("click."+constants.NS+" touchstart."+constants.NS,function(e){if(!e.handled){var $$=$(this),toggled=$$.data("toggled");$$.data("toggled",(!toggled));if(!toggled){options.onBeforeShow.call($menu);$$.removeClass().addClass(settings.internal.openedClass);$menu.stop(true).animate(options.animIn,options.speedIn,options.easeIn,function(){options.onShow.call($menu);});}else{options.onBeforeHide.call($menu);$menu.stop(true).animate(options.animOut,options.speedOut,options.easeOut,function(){$$.removeClass().addClass(settings.internal.closedClass);options.onHide.call($menu);});}e.handled=true;}e.stopPropagation();e.preventDefault();});};$.fn[constants.NS]=function(method){if(methods[method]){return methods[method].apply(this,Array.prototype.slice.call(arguments,1));}else{if((typeof method==="object")||(!method)){return methods.init.apply(this,arguments);}else{$.error("Method "+method+" does not exist on jQuery."+constants.NS);}}};var settings={};settings.internal={cloneClass:constants.PREFIX+"-clone",closedClass:constants.PREFIX+"-closed",openedClass:constants.PREFIX+"-opened",toggleClass:constants.PREFIX+"-toggle"};settings.external={animIn:{height:"toggle"},animOut:{height:"toggle"},clone:true,cloneId:true,easeIn:"swing",easeOut:"swing",cloneRemove:false,speedIn:"normal",speedOut:"normal",onInit:function(){},onAfterInit:function(){},onBeforeShow:function(){},onShow:function(){},onBeforeHide:function(){},onHide:function(){}};$.fn[constants.NS].defaults=settings.external;})(jQuery);